/*** Compiler Front-End Test automatically generated by the BNF Converter ***/
/*                                                                          */
/* This test will parse a file, print the abstract syntax tree, and then    */
/* pretty-print the result.                                                 */
/*                                                                          */
/****************************************************************************/
using System;
using System.IO;
using CSPGF.Trees.Absyn;

namespace CSPGF.Trees
{
    public class Test
    {
        /*public static void Main(string[] args)
        {
          if (args.Length > 0)
          {
            Stream stream = File.OpenRead(args[0]);
            /* The default entry point is used. For other options see class Parser */
        /*Parser parser = new Parser();
        Scanner scanner = Scanner.CreateScanner(stream);*/
        // Uncomment to enable trace information:
        // parser.Trace shows what the parser is doing
        // parser.Trace = true;
        // scanner.Trace prints the tokens as they are parsed, one token per line
        // scanner.Trace = true;
        /*parser.scanner = scanner;
        try
        {
          Tree parse_tree = parser.ParseTree();
          if (parse_tree != null)
          {
            Console.Out.WriteLine("Parse Successful!");
            Console.Out.WriteLine("");
            Console.Out.WriteLine("[Abstract Syntax]");
            Console.Out.WriteLine("{0}", PrettyPrinter.Show(parse_tree));
            Console.Out.WriteLine("");
            Console.Out.WriteLine("[Linearized Tree]");
            Console.Out.WriteLine("{0}", PrettyPrinter.Print(parse_tree));
          }
          else
          {
            Console.Out.WriteLine("Parse NOT Successful!");
          }
        }
        catch(Exception e)
        {
          Console.Out.WriteLine("Parse NOT Successful:");
          Console.Out.WriteLine(e.Message);
          Console.Out.WriteLine("");
          Console.Out.WriteLine("Stack Trace:");
          Console.Out.WriteLine(e.StackTrace);
        }
      }
      else
      {
        Console.Out.WriteLine("You must specify a filename!");
      }
    }
  } */
    }
}
